#!/usr/bin/env node

var get = require('superagent');
var write = require('fs').writeFileSync;
var join = require('path').join;
var str = JSON.stringify;

get('https://saucelabs.com/rest/v1/info/browsers/webdriver')
  .accept('application/json')
  .end(function(_, res){
    var all = res.body;
    var out = {};

    var json = all.reduce(function(o, _){
      var sv = _.short_version;
      var n = _.api_name;
      var item = o[n] = o[n] || {};
      var v = item[sv] = item[sv] || [];
      if (-1 == v.indexOf(_.os)) v.push(_.os);
      return o;
    }, {});

    for (var name in json) {
      var v = Object.keys(json[name]);

      v.sort(function(a, b){
        if (!/\d/.test(b)) return -1;
        if (!/\d/.test(a)) return 1;
        a = a.split('.');
        b = b.split('.');
        return (a[0] + (a[1] || 0)) - (b[0] + (b[1] || 0));
      });

      v.forEach(function(v){
        (out[name] = out[name] || []).push({
          platforms: json[name][v],
          version: v
        });
      });
    }

    write(join(__dirname, '../map.json'), str(out, null, 2));
  });

/**
 * Normalize
 */

function normalize(arr){
  return arr.reduce(function(o, _){
    var sv = _.short_version;
    var n = _.api_name;
    var item = o[n] = o[n] || {};
    var v = item[sv] = item[sv] || [];
    if (-1 == v.indexOf(_.os)) v.push(_.os);
    return o;
  }, {});
}
